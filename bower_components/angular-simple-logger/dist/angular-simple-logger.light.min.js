!function(n,r){r.module("nemLogging",[]),r.module("nemLogging").provider("nemDebug",function(){var n=null;return this.$get=function(){return n},this.debug=n,this});var t=function(n,r){return function(){return n.apply(r,arguments)}};r.module("nemLogging").provider("nemSimpleLogger",["nemDebugProvider",function(n){var r,e,i,o,u,g,l,f,s,h,d;for(h=n.debug,i=["debug","info","warn","error","log"],r={},f=l=0,s=i.length;s>l;f=++l)d=i[f],r[d]=f;return u=function(n,r,t){return n>=r?t():void 0},o=function(n){var r,t,e;if(r=!1,!n)return r;for(t=0,e=i.length;e>t&&(d=i[t],r=null!=n[d]&&"function"==typeof n[d],r);t++);return r},g=function(n,r){var t,e,o,u;for(t=h(n),u={},e=0,o=i.length;o>e;e++)d=i[e],u[d]="debug"===d?t:r[d];return u},e=function(){function n(n){var e,g,l,f,s;if(this.$log=n,this.spawn=t(this.spawn,this),!this.$log)throw"internalLogger undefined";if(!o(this.$log))throw"@$log is invalid";for(this.doLog=!0,s={},e=function(n){return function(t){return s[t]=function(e){return n.doLog?u(r[t],n.currentLevel,function(){return n.$log[t](e)}):void 0},n[t]=s[t]}}(this),g=0,l=i.length;l>g;g++)f=i[g],e(f);this.LEVELS=r,this.currentLevel=r.error}return n.prototype.spawn=function(r){if("string"==typeof r){if(!o(this.$log))throw"@$log is invalid";if(!h)throw"nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";return g(r,this.$log)}return new n(r||this.$log)},n}(),this.decorator=["$log",function(n){var t;return t=new e(n),t.currentLevel=r.debug,t}],this.$get=["$log",function(n){return new e(n)}],this}])}(window,angular);